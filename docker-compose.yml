version: "3.8"
services:
  mongo_stakeholders:
    image: mongo:6
    volumes: ["mongo-stakeholders:/data/db"]
    restart: unless-stopped
    ports: ["27018:27017"]

  mongo_tour:
    image: mongo:6
    volumes: ["mongo-tour:/data/db"]
    restart: unless-stopped
    ports: ["27019:27017"]

  mongo_purchase:
    image: mongo:6
    volumes: ["mongo-purchase:/data/db"]
    restart: unless-stopped
    ports: ["27020:27017"]

  mongo_blog:
    image: mongo:6
    volumes: ["mongo-blog:/data/db"]
    restart: unless-stopped
    ports: ["27021:27017"]

  nats:
    image: nats:2.10
    command: ["-js", "-m", "8222"]
    ports: ["4222:4222", "8222:8222"]
    restart: unless-stopped

  stakeholders:
    build:
      context: ./StakeholdersApi
    environment:
      - MONGO__CONNECTIONSTRING=mongodb://mongo_stakeholders:27017
      - MONGO__DATABASE=soa_stakeholders
      - JWT__SECRET=this_is_a_dev_secret_with_32+_chars!!
      - PORT=8080
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on: [mongo_stakeholders]
    ports: ["8080:8080"]
    restart: unless-stopped

  tour:
    build:
      context: .
      dockerfile: ./ToursApi/Dockerfile
    environment:
      - MONGO__CONNECTIONSTRING=mongodb://mongo_tour:27017
      - MONGO__DATABASE=soa_tour
      - JWT__SECRET=this_is_a_dev_secret_with_32+_chars!!
      - PORT=8090
      - ASPNETCORE_ENVIRONMENT=Development
      - NATS__HOST=nats
      - NATS__PORT=4222
      - RESERVATION_COMMAND_SUBJECT=tour.reservation.command
      - RESERVATION_REPLY_SUBJECT=tour.reservation.reply
    depends_on: [mongo_tour, nats]
    ports: ["8090:8090"]
    restart: unless-stopped

  purchase:
    build:
      context: .
      dockerfile: ./PurchaseApi/Dockerfile
    environment:
      - MONGO__CONNECTIONSTRING=mongodb://mongo_purchase:27017
      - MONGO__DATABASE=soa_purchase
      - JWT__SECRET=this_is_a_dev_secret_with_32+_chars!!
      - PORT=8091
      - ASPNETCORE_ENVIRONMENT=Development
      - NATS__HOST=nats
      - NATS__PORT=4222
      - CREATE_PURCHASE_COMMAND_SUBJECT=purchase.create.command
      - CREATE_PURCHASE_REPLY_SUBJECT=purchase.create.reply
      - RESERVATION_COMMAND_SUBJECT=tour.reservation.command
      - RESERVATION_REPLY_SUBJECT=tour.reservation.reply
    depends_on: [mongo_purchase, nats, tour]
    ports: ["8091:8091"]
    restart: unless-stopped

  blog:
    build:
      context: ./BlogApi
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo_blog:27017/soa_blog
      - SERVER_PORT=8092
      - SPRING_PROFILES_ACTIVE=default
      - JWT_SECRET=this_is_a_dev_secret_with_32+_chars!!
      - UPLOAD_DIR=/app/uploads
      - STAKEHOLDERS_BASE_URL=http://stakeholders:8080
      - TOURS_BASE_URL=http://tour:8090
      - PURCHASE_BASE_URL=http://purchase:8091
    depends_on: [mongo_blog]
    volumes:
      - blog-uploads:/app/uploads
    ports: ["8092:8092"]
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    ports: ["9090:9090"]
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.1.4
    depends_on: [prometheus]
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    ports: ["3000:3000"]
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    ports: ["8082:8080"]
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.8.2
    command:
      - '--path.rootfs=/host'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - '/:/host:ro'
    restart: unless-stopped
    
volumes:
  mongo-stakeholders:
  mongo-tour:
  mongo-purchase:
  mongo-blog:
  prometheus-data:
  grafana-data:
  blog-uploads:
